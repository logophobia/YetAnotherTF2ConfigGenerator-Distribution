

<%@ val classWeaponSensitivity: scala.collection.immutable.Map[java.lang.String, scala.collection.immutable.List[Double]] %>
<%@ val classWeaponViewmodelSwitchMode: scala.collection.immutable.Map[java.lang.String, scala.collection.immutable.List[java.lang.String]] %>
<%@ val classWeaponShow: scala.collection.immutable.Map[java.lang.String, scala.collection.immutable.List[Boolean]] %>
<%@ val classWeaponTextBatch: scala.collection.immutable.Map[java.lang.String, scala.collection.immutable.List[Int]] %>
<%@ val classWeaponCrosshairs: scala.collection.immutable.Map[java.lang.String, scala.collection.immutable.List[java.lang.String]] %>
<%@ val classWeaponColors: scala.collection.immutable.Map[java.lang.String, scala.collection.immutable.List[scala.Tuple3[Int, Int, Int]]] %>
<%@ val classWeaponScales: scala.collection.immutable.Map[java.lang.String, scala.collection.immutable.List[Int]] %>
<%@ val classWeaponDingVolume: scala.collection.immutable.Map[java.lang.String, scala.collection.immutable.List[Double]] %>
<%@ val classWeaponDingPitchMax: scala.collection.immutable.Map[java.lang.String, scala.collection.immutable.List[Int]] %>
<%@ val classWeaponDingPitchMin: scala.collection.immutable.Map[java.lang.String, scala.collection.immutable.List[Int]] %>
<%@ val classEnableCrouchJump: scala.collection.immutable.Map[java.lang.String, Boolean] %>
<%@ val classInterpRatio: scala.collection.immutable.Map[java.lang.String, Double] %>
<%@ val dingEnable: Int %>
<%@ val damagenumbers: Int %>
<%@ val hideTracers: Boolean %>
<%@ val enableSprays: Boolean %>
<%@ val enableGibs: Boolean %>
<%@ val enableRagdolls: Boolean %>
<%@ val autoreload: Int %>
<%@ val fov: Int %>
<%@ val fastswitch: Int %>
<%@ val viewmodelFov: Int %>
<%@ val networkConfig: java.lang.String %>
<%@ val graphicsConfig: java.lang.String %>
<%@ val zoomFactor: Double %>
<%@ val scoreboardNetgraph: Int %>
<%@ val autocallThreshold: Int %>
<%@ val showHealBeam: Boolean %>
<%@ val healBatching: Int %>
<%@ val medicSayFake: java.lang.String %>
<%@ val medicSayUber: java.lang.String %>
<%@ val zoomSensitivity: Double %>
<%@ val noCrossHairZoom: Int %>
<%@ val fullChargeBell: Int %>
<%@ val hudMin: Int %>
<%@ val showFlames: Boolean %>
<%@ val showViewmodelCloak: Boolean %>
<%@ val disguiseCycleClasses: scala.collection.immutable.List[Int] %>
<%@ val disguiseFriendlyCycleClasses: scala.collection.immutable.List[Int] %>
<%@ val enableSpecTournamentMode: Int %>
<%@ val classExtraScripts: scala.collection.immutable.Map[java.lang.String, java.lang.String] %>
<%@ val autoexecExtraScript: java.lang.String %>
<%@ val movementFwd: java.lang.String %>
<%@ val movementLeft: java.lang.String %>
<%@ val movementRight: java.lang.String %>
<%@ val movementBack: java.lang.String %>
<%@ val primAttack: java.lang.String %>
<%@ val secAttack: java.lang.String %>
<%@ val ternaryAttack: java.lang.String %>
<%@ val primSecSwap: java.lang.String %>
<%@ val meleeSwap: java.lang.String %>
<%@ val previousWeapon: java.lang.String %>
<%@ val nextInvWeapon: java.lang.String %>
<%@ val prevInvWeapon: java.lang.String %>
<%@ val directWeapon1: java.lang.String %>
<%@ val directWeapon2: java.lang.String %>
<%@ val directWeapon3: java.lang.String %>
<%@ val directWeapon4: java.lang.String %>
<%@ val jump: java.lang.String %>
<%@ val reloadWeapon: java.lang.String %>
<%@ val normalJump: java.lang.String %>
<%@ val voiceMenu1: java.lang.String %>
<%@ val voiceMenu2: java.lang.String %>
<%@ val voiceMenu3: java.lang.String %>
<%@ val actionSlot: java.lang.String %>
<%@ val taunt: java.lang.String %>
<%@ val dropItem: java.lang.String %>
<%@ val inspect: java.lang.String %>
<%@ val say: java.lang.String %>
<%@ val teamSay: java.lang.String %>
<%@ val console: java.lang.String %>
<%@ val duck: java.lang.String %>
<%@ val reloadhud: java.lang.String %>
<%@ val suicide: java.lang.String %>
<%@ val screenshot: java.lang.String %>
<%@ val saveReplay: java.lang.String %>
<%@ val abuseReport: java.lang.String %>
<%@ val quickSwitch: java.lang.String %>
<%@ val teamOnlyTalk: java.lang.String %>
<%@ val normalTalk: java.lang.String %>
<%@ val medic: java.lang.String %>
<%@ val scoreboard: java.lang.String %>
<%@ val backpack: java.lang.String %>
<%@ val backpackComplete: java.lang.String %>
<%@ val switchClass: java.lang.String %>
<%@ val switchTeam: java.lang.String %>
<%@ val medicRadar: java.lang.String %>
<%@ val zoom: java.lang.String %>
<%@ val spray: java.lang.String %>
<%@ val requestAccept: java.lang.String %>
<%@ val requestDecline: java.lang.String %>
<%@ val switchBadnet: java.lang.String %>
<%@ val switchGoodnet: java.lang.String %>
<%@ val switchLannet: java.lang.String %>
<%@ val startSpawnSwitch: java.lang.String %>
<%@ val finishSpawnSwitch: java.lang.String %>
<%@ val disguiseMenuToggle: java.lang.String %>
<%@ val disguiseCycle: java.lang.String %>
<%@ val disguiseFriendlyCycle: java.lang.String %>
<%@ val disguiseLast: java.lang.String %>
<%@ val disguiseScout: java.lang.String %>
<%@ val disguiseSoldier: java.lang.String %>
<%@ val disguisePyro: java.lang.String %>
<%@ val disguiseDemo: java.lang.String %>
<%@ val disguiseHeavy: java.lang.String %>
<%@ val disguiseEngineer: java.lang.String %>
<%@ val disguiseMedic: java.lang.String %>
<%@ val disguiseSniper: java.lang.String %>
<%@ val disguiseSpy: java.lang.String %>
<%@ val disguiseFriendlyScout: java.lang.String %>
<%@ val disguiseFriendlySoldier: java.lang.String %>
<%@ val disguiseFriendlyPyro: java.lang.String %>
<%@ val disguiseFriendlyDemo: java.lang.String %>
<%@ val disguiseFriendlyHeavy: java.lang.String %>
<%@ val disguiseFriendlyEngineer: java.lang.String %>
<%@ val disguiseFriendlyMedic: java.lang.String %>
<%@ val disguiseFriendlySniper: java.lang.String %>
<%@ val disguiseFriendlySpy: java.lang.String %>
<%@ val buildSentry: java.lang.String %>
<%@ val buildDispenser: java.lang.String %>
<%@ val buildEntrance: java.lang.String %>
<%@ val buildExit: java.lang.String %>
<%@ val destroySentry: java.lang.String %>
<%@ val destroyDispenser: java.lang.String %>
<%@ val destroyEntrance: java.lang.String %>
<%@ val destroyExit: java.lang.String %>
<%@ val switchSpec: java.lang.String %>
<%@ val toggleReady: java.lang.String %>
<%@ val voice01: java.lang.String %>
<%@ val voice02: java.lang.String %>
<%@ val voice03: java.lang.String %>
<%@ val voice04: java.lang.String %>
<%@ val voice05: java.lang.String %>
<%@ val voice06: java.lang.String %>
<%@ val voice07: java.lang.String %>
<%@ val voice10: java.lang.String %>
<%@ val voice11: java.lang.String %>
<%@ val voice12: java.lang.String %>
<%@ val voice13: java.lang.String %>
<%@ val voice14: java.lang.String %>
<%@ val voice15: java.lang.String %>
<%@ val voice16: java.lang.String %>
<%@ val voice17: java.lang.String %>
<%@ val voice20: java.lang.String %>
<%@ val voice21: java.lang.String %>
<%@ val voice22: java.lang.String %>
<%@ val voice23: java.lang.String %>
<%@ val voice24: java.lang.String %>
<%@ val voice25: java.lang.String %>
<%@ val voice26: java.lang.String %>
<%@ val voice27: java.lang.String %>
<%@ val currentConfig: String %>
#import(yetanothertf2configgenerator.ConfigGenerator._)
//reset everything
unbindall

//exec other configs needed
exec reset
exec net

#if (graphicsConfig != "none")
exec <%= graphicsConfig %>
#end

#if (networkConfig != "none")
<%= networkConfig %>_net
#end

//null-cancelling movement
alias +move_forward "-back; +forward; alias if_forward +forward; current_vis_strafeswitch"
alias +move_back "-forward; +back; alias if_back +back; current_vis_strafeswitch"
alias +move_left "-moveright; +moveleft; alias if_left +moveleft; current_vis_strafeswitch"
alias +move_right "-moveleft; +moveright; alias if_right +moveright; current_vis_strafeswitch"
alias -move_forward "-forward; if_back; alias if_forward """
alias -move_back "-back; if_forward; alias if_back """
alias -move_left "-moveleft; if_right; alias if_left """
alias -move_right "-moveright; if_left; alias if_right """
alias if_forward ""
alias if_back ""
alias if_left ""
alias if_right ""

//weapon switch
#for (slot <- 1 to 3)
alias weapon_admin_<%= slot %> "text_batch_<%= slot %>; weap_ding_<%= slot %>; weap_sens_<%= slot %>; cross_<%= slot %>; alias current_weapon_sens weap_sens_<%= slot %>; alias current_zoom_sens weap_zoom_sens_<%= slot %>; weapon_slot_spec_admin_<%= slot %>; alias prev_inv_weapon weapon<%= if(slot == 1) 3 else slot - 1 %>; alias next_inv_weapon weapon<%= if(slot == 3) 1 else slot + 1 %>; alias current_vis_strafeswitch current_vis_strafeswitch_<%= slot %>; alias current_vis_shootswitch current_vis_shootswitch_<%= slot %>; show_weapon; current_vis_immediatelyswitch_<%= slot %>"
#if(slot == 1)
alias weapon_slot_spec_admin_<%= slot %> "alias primsecswap weapon2;         alias othermeleeswap weapon3;         set_previous_weapon_<%= slot %>; alias set_previous_weapon_1 "";                              alias set_previous_weapon_2 "alias previous_weapon weapon1"; alias set_previous_weapon_3 "alias previous_weapon weapon1""
#elseif(slot == 2)
alias weapon_slot_spec_admin_<%= slot %> "alias primsecswap weapon1;         alias othermeleeswap weapon3;         set_previous_weapon_<%= slot %>; alias set_previous_weapon_1 "alias previous_weapon weapon2"; alias set_previous_weapon_2 "";                              alias set_previous_weapon_3 "alias previous_weapon weapon2""
#else
alias weapon_slot_spec_admin_<%= slot %> "alias primsecswap previous_weapon; alias othermeleeswap previous_weapon; set_previous_weapon_<%= slot %>; alias set_previous_weapon_1 "alias previous_weapon weapon3"; alias set_previous_weapon_2 "alias previous_weapon weapon3"; alias set_previous_weapon_3 ""                             "
#end
alias weapon<%= slot %> "slot<%= slot %>; weapon_admin_<%= slot %>"
#end

//teamonly voicebind
alias +teamonly "+teamtalk; +voicerecord"
alias -teamonly "-teamtalk; -voicerecord"

//crouch jump
alias +crouchjump "+jump; +duck; current_vis_strafeswitch"
alias -crouchjump "-duck; -jump"

//scoreboard with netgraph
alias +sb "+score; net_graph <%= scoreboardNetgraph %>"
alias -sb "-score; net_graph 0"

//zoom-in bind
alias +zoom_in "fov_desired <%= Math.round(fov / zoomFactor) %>; current_zoom_sens"
alias -zoom_in "fov_desired <%= fov %>; current_weapon_sens"

//reset spawn switch
alias finish_spawn_switch ""

//options
tf_dingalingaling <%= dingEnable %>
tf_remember_activeweapon 1 //this is needed for the weapon switching script, otherwise it gets out of sync on death/respawn
fov_desired <%= fov %>
cl_autoreload <%= autoreload %>
hud_fastswitch <%= fastswitch %>
hud_combattext <%= damagenumbers %>
cl_use_tournament_specgui <%= enableSpecTournamentMode %>
cl_hud_minmode <%= hudMin %>

//graphics options, I define them here so people will not have to edit stuff in the graphicsconfigs, they're outcommented in chris' graphics configs themselves
#if(enableSprays)
// Enable sprays
cl_playerspraydisable 0
r_spray_lifetime 2
#else
// Disable sprays
cl_playerspraydisable 1
r_spray_lifetime 0
#end

#if(enableGibs)
// Enable gibs
cl_phys_props_enable 1
cl_phys_props_max 128
props_break_max_pieces -1
r_propsmaxdist 1000
violence_agibs 1
violence_hgibs 1
#else
// Disable gibs
cl_phys_props_enable 0
cl_phys_props_max 0
props_break_max_pieces 0
r_propsmaxdist 1
violence_agibs 0
violence_hgibs 0
#end

#if(enableRagdolls)
// Enable ragdolls
cl_ragdoll_fade_time 15
cl_ragdoll_forcefade 0
cl_ragdoll_physics_enable 1
g_ragdoll_fadespeed 600
g_ragdoll_lvfadespeed 100
ragdoll_sleepaftertime "5.0f"
#else
// Disable ragdolls
cl_ragdoll_fade_time 0
cl_ragdoll_forcefade 1
cl_ragdoll_physics_enable 0
g_ragdoll_fadespeed 0
g_ragdoll_lvfadespeed 0
ragdoll_sleepaftertime 0
#end

<%= autoexecExtraScript %>
