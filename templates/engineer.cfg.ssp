exec reset

alias start_spawn_switch "alias finish_spawn_switch "join_class <%= currentConfig %>"; join_class random"

#if (classEnableCrouchJump(currentConfig))
  <%= bindif(jump, "+crouchJump") %>
#else
  <%= bindif(jump, "+jump") %>
#end

//class specific crosshairs and weapon visibility and sensitivity
cl_interp_ratio <%= classInterpRatio(currentConfig).toString %>
#for (slot <- 1 to 3)
  alias cross_<%= slot %> "cl_crosshair_red <%= classWeaponColors(currentConfig)(slot - 1)._1 %>; cl_crosshair_green <%= classWeaponColors(currentConfig)(slot - 1)._2 %>; cl_crosshair_blue <%= classWeaponColors(currentConfig)(slot - 1)._3 %>; cl_crosshair_scale <%= classWeaponScales(currentConfig)(slot - 1) %>; cl_crosshair_file <%= classWeaponCrosshairs(currentConfig)(slot - 1) %>"
  alias weap_sens_<%= slot %> "sensitivity <%= classWeaponSensitivity(currentConfig)(slot - 1).toString %>"
  alias weap_ding_<%= slot %> "tf_dingaling_pitchmaxdmg <%= classWeaponDingPitchMax(currentConfig)(slot - 1) %>; tf_dingaling_pitchmindmg <%= classWeaponDingPitchMin(currentConfig)(slot - 1) %>; tf_dingaling_volume <%= classWeaponDingVolume(currentConfig)(slot - 1).toString %>"
  alias weap_zoom_sens_<%= slot %> "sensitivity <%= (classWeaponSensitivity(currentConfig)(slot - 1) / zoomFactor).toString %>"
  alias text_batch_<%= slot %> "hud_combattext_batching <%= classWeaponTextBatch(currentConfig)(slot - 1).toString %>"
    
  <% if(classWeaponShow(currentConfig)(slot - 1)) { %>
    alias weapon_vis_<%= slot %> show_weapon
  <% } else { %>
    alias weapon_vis_<%= slot %> hide_weapon
  <% } %>

  <% if(classWeaponViewmodelSwitchMode(currentConfig)(slot - 1) == "both" || classWeaponViewmodelSwitchMode(currentConfig)(slot - 1) == "after-shooting") { %>
    alias current_vis_shootswitch_<%= slot %> weapon_vis_<%= slot %>
  <% } else { %>
    alias current_vis_shootswitch_<%= slot %> ""
  <% } %>

  <% if(classWeaponViewmodelSwitchMode(currentConfig)(slot - 1) == "both" || classWeaponViewmodelSwitchMode(currentConfig)(slot - 1) == "after-strafing") { %>
     alias current_vis_strafeswitch_<%= slot %> weapon_vis_<%= slot %>
  <% } else { %>
     alias current_vis_strafeswitch_<%= slot %> ""
  <% } %>

  <% if(classWeaponViewmodelSwitchMode(currentConfig)(slot - 1) == "immediately") { %>
     alias current_vis_immediatelyswitch_<%= slot %> weapon_vis_<%= slot %>
  <% } else { %>
     alias current_vis_immediatelyswitch_<%= slot %> ""
  <% } %>
#end

<%= classExtraScripts(currentConfig) %>

//ensures that when building the weapon switching doesn't get out of sync due to autoswitching to the wrench
alias +buildandwrench "+attack; weapon_admin_3"
alias -buildandwrench "-attack; <%= bindif(primAttack, "\"+attack; current_vis_shootswitch\"") %>"

//ensures that hauling a building will not cause things to get out of sync due to autoswitching to the wrench
alias +haulandwrench "+attack2; current_vis_shootswitch; <%= bindif(primAttack, "+buildandwrench") %>"
alias -haulandwrench -attack2

//quickbuild
alias bsentry "destroy 2; build 2; bind  <%= primAttack %> +buildandwrench"
alias bdispenser "destroy 0; build 0; bind  <%= primAttack %> +buildandwrench"
alias bentrance "destroy 1; build 1; bind  <%= primAttack %> +buildandwrench"
alias bexit "destroy 3; build 3; bind  <%= primAttack %> +buildandwrench"

//destroy
alias dsentry "destroy 2"
alias ddispenser "destroy 0"
alias dentrance "destroy 1"
alias dexit "destroy 3"

//binds
<%= bindif(buildSentry, "bsentry") %>
<%= bindif(buildDispenser, "bdispenser") %>
<%= bindif(buildEntrance, "bentrance") %>
<%= bindif(buildExit, "bexit") %>
<%= bindif(destroySentry, "dsentry") %>
<%= bindif(destroyDispenser, "ddispenser") %>
<%= bindif(destroyEntrance, "dentrance") %>
<%= bindif(destroyExit, "dexit") %> 
<%= bindif(secAttack, "+haulandwrench") %>
<%= bindif(directWeapon4, "\"slot4; bind " + primAttack + " +buildandwrench\"") %>
<%= bindif(directWeapon5, "slot5") %>
